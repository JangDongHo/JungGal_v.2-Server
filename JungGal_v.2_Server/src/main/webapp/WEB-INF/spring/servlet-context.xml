<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- multipart 파일 처리 bean -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<beans:property name="maxUploadSize" value="20971520" />
    	<beans:property name="maxInMemorySize" value="20971520" />
	</beans:bean>
	
	<context:component-scan base-package="com.GNU_Graduate_Project_Team.JungGal_v2" />
	
	<!-- Spring Quartz -->
	<!-- Job -->
	<beans:bean id="job" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <beans:property name="targetObject" ref="ScheduleJob" />
        <beans:property name="targetMethod" value="passedTimeDeletePost" />
        <beans:property name="concurrent" value="false" />
    </beans:bean>

	<!-- Trigger -->
	<beans:bean id="jobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <beans:property name="jobDetail" ref="job" />
        <beans:property name="cronExpression" value="0 0/15 * * * ?" />
    </beans:bean>
  
    <!-- Scheduler -->
    <!-- bean의 id인 jobScheduler는 원하는 이름으로 설정 가능 -->
    <beans:bean id="jobScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	
        <!-- 스케줄러로 작동시킬 트리거 목록 지정(여러 개의 트리거를 등록해 사용 가능) -->
        <beans:property name="triggers">
            <beans:list>
                <beans:ref bean="jobTrigger" />
            </beans:list>
        </beans:property>
    </beans:bean>
    
    <!-- WebSocket Test -->
    <websocket:handlers>
    	<websocket:mapping handler="echoHandler" path="/echo/{roomID}"/>
    	<websocket:mapping handler="chatHandler" path="/chat/{roomID}"/>
    	<websocket:handshake-interceptors>
    		<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
    	</websocket:handshake-interceptors>
    	<websocket:sockjs/>
    </websocket:handlers>
    
	<beans:bean id="echoHandler" class="com.GNU_Graduate_Project_Team.JungGal_v2.WebSocket.EchoHandler"/>    
	<beans:bean id="chatHandler" class="com.GNU_Graduate_Project_Team.JungGal_v2.WebSocket.ChatHandler"/>

</beans:beans>


